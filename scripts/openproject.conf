upstream openproject {
  server unix:/home/openproject/openproject/tmp/puma.sock fail_timeout=0;
}

server {
  listen 80 default_server;

  #access_log /var/www/openproject/log/nginx_access.log;
  #error_log /var/www/openproject/log/nginx_error.log;
  #rewrite_log on;

  # path for static files
  root /home/openproject/openproject/public;

  location / {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    # proxy_set_header X-Forwarded-Proto https;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # set "proxy_buffering off" *only* for Rainbows! when doing
    # Comet/long-poll stuff.  It's also safe to set if you're
    # using only serving fast clients with Unicorn + nginx.
    # Otherwise you _want_ nginx to buffer responses to slow
    # clients, really.
    # proxy_buffering off;

    # Try to serve static files from nginx, no point in making an
    # *application* server like Unicorn/Rainbows! serve static files.
    if (!-f $request_filename) {
      proxy_pass http://openproject;
      break;
    }
  }

  # cache.appcache, your document html and data
  #location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    #expires -1;
    #access_log logs/static.log;
  #}

  # Feed
  location ~* \.(?:rss|atom)$ {
    expires 1m;
    add_header Cache-Control "public";
  }

  # Media: images, icons, video, audio, HTC
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    expires 1d;
    access_log off;
    add_header Cache-Control "public";
  }

  # CSS and Javascript
  location ~* \.(?:css|js)$ {
    expires 1d;
    access_log off;
    add_header Cache-Control "public";
  }
}
